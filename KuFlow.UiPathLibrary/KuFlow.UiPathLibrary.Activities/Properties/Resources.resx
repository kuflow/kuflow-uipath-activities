<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContinueOnError_Description" xml:space="preserve">
    <value>If set, continue executing the remaining activities even if the current activity has failed.</value>
    <comment>property description</comment>
  </data>
  <data name="ContinueOnError_DisplayName" xml:space="preserve">
    <value>ContinueOnError</value>
    <comment>property name</comment>
  </data>
  <data name="Timeout_Description" xml:space="preserve">
    <value>Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute).</value>
    <comment>property description</comment>
  </data>
  <data name="Timeout_DisplayName" xml:space="preserve">
    <value>Timeout (milliseconds)</value>
    <comment>property name</comment>
  </data>
  <data name="Timeout_Error" xml:space="preserve">
    <value>The activity timed out and was canceled.</value>
    <comment>error message</comment>
  </data>
  <data name="Do" xml:space="preserve">
    <value>Do</value>
    <comment>generic</comment>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Common</value>
    <comment>category</comment>
  </data>
  <data name="Authentication_Category" xml:space="preserve">
    <value>Authentication</value>
    <comment>category</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="ValidationScope_Error" xml:space="preserve">
    <value>Cannot be used outside of a {0}.</value>
    <comment>error message; {0} is a container activity (e.g. a scope)</comment>
  </data>
  <data name="ValidationValue_Error" xml:space="preserve">
    <value>Please provide a value for {0}.</value>
    <comment>error message; {0} is the name of a missing property</comment>
  </data>
  <data name="ValidationExclusiveProperties_Error" xml:space="preserve">
    <value>Please provide a value either for {0} or {1}, but not both.</value>
    <comment>error message; {0} &amp; {1} are mutually exclusive activities</comment>
  </data>
  <data name="ValidationOverloadGroup_Error" xml:space="preserve">
    <value>Please provide values for both {0} and {1}.</value>
    <comment>error message; {0} &amp; {1} are complementary properties</comment>
  </data>
  <data name="KuFlowScope_DisplayName" xml:space="preserve">
    <value>KuFlow Scope</value>
    <comment>activity name</comment>
  </data>
  <data name="KuFlowScope_Description" xml:space="preserve">
    <value>Authenticates all KuFlow activities</value>
    <comment>activity description</comment>
  </data>
  <data name="KuFlowScope_ClientId_DisplayName" xml:space="preserve">
    <value>ClientId</value>
    <comment>property name</comment>
  </data>
  <data name="KuFlowScope_ClientId_Description" xml:space="preserve">
    <value>Identifier of the KuFlow application used to authenticate the activities</value>
    <comment>property description</comment>
  </data>
  <data name="KuFlowScope_ClientSecret_DisplayName" xml:space="preserve">
    <value>ClientSecret</value>
    <comment>property name</comment>
  </data>
  <data name="KuFlowScope_ClientSecret_Description" xml:space="preserve">
    <value>Password of the KuFlow application used to authenticate the activities</value>
    <comment>property description</comment>
  </data>
  <data name="AppendALogToTheTask_DisplayName" xml:space="preserve">
    <value>Append a log to the task</value>
    <comment>activity name</comment>
  </data>
  <data name="AppendALogToTheTask_Description" xml:space="preserve">
    <value>A log entry is added to the task. If the number of log entries is reached, the oldest log entry is removed.</value>
    <comment>activity description</comment>
  </data>
  <data name="AppendALogToTheTask_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="AppendALogToTheTask_TaskIdentifier_Description" xml:space="preserve">
    <value>Identifier of the task to which the log is added</value>
    <comment>property description</comment>
  </data>
  <data name="AppendALogToTheTask_Message_DisplayName" xml:space="preserve">
    <value>Message</value>
    <comment>property name</comment>
  </data>
  <data name="AppendALogToTheTask_Message_Description" xml:space="preserve">
    <value>Message to add</value>
    <comment>property description</comment>
  </data>
  <data name="AppendALogToTheTask_Level_DisplayName" xml:space="preserve">
    <value>Level</value>
    <comment>property name</comment>
  </data>
  <data name="AppendALogToTheTask_Level_Description" xml:space="preserve">
    <value>Log level: INFO, WARN or ERROR</value>
    <comment>property description</comment>
  </data>
  <data name="RetrieveTask_DisplayName" xml:space="preserve">
    <value>Retrieve task</value>
    <comment>activity name</comment>
  </data>
  <data name="RetrieveTask_Description" xml:space="preserve">
    <value>Allow to get a task by Id</value>
    <comment>activity description</comment>
  </data>
  <data name="RetrieveTask_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="RetrieveTask_TaskIdentifier_Description" xml:space="preserve">
    <value>Identifier of the task to which the log is added</value>
    <comment>property description</comment>
  </data>
  <data name="RetrieveTask_Task_Description" xml:space="preserve">
    <value>Identifier of the task to retrieve</value>
    <comment>property description</comment>
  </data>
  <data name="RetrieveTask_Task_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="RetrieveProcess_DisplayName" xml:space="preserve">
    <value>Retrieve process</value>
    <comment>activity name</comment>
  </data>
  <data name="RetrieveProcess_Description" xml:space="preserve">
    <value>Allow to get a process by Id</value>
    <comment>activity description</comment>
  </data>
  <data name="RetrieveProcess_ProcessIdentifier_DisplayName" xml:space="preserve">
    <value>Process Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="RetrieveProcess_ProcessIdentifier_Description" xml:space="preserve">
    <value>Identifier of the process to retrieve</value>
    <comment>property description</comment>
  </data>
  <data name="RetrieveProcess_Process_DisplayName" xml:space="preserve">
    <value>Process</value>
    <comment>property name</comment>
  </data>
  <data name="RetrieveProcess_Process_Description" xml:space="preserve">
    <value>Process resource</value>
    <comment>property description</comment>
  </data>
  <data name="ClaimTask_DisplayName" xml:space="preserve">
    <value>Claim task</value>
    <comment>activity name</comment>
  </data>
  <data name="ClaimTask_Description" xml:space="preserve">
    <value>Allow to claim a task</value>
    <comment>activity description</comment>
  </data>
  <data name="ClaimTask_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="ClaimTask_TaskIdentifier_Description" xml:space="preserve">
    <value>Identifier of the task to claim</value>
    <comment>property description</comment>
  </data>
  <data name="ClaimTask_Task_DisplayName" xml:space="preserve">
    <value>Task</value>
    <comment>property name</comment>
  </data>
  <data name="ClaimTask_Task_Description" xml:space="preserve">
    <value>Task resource</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElement_DisplayName" xml:space="preserve">
    <value>Save element</value>
    <comment>activity name</comment>
  </data>
  <data name="SaveElement_Description" xml:space="preserve">
    <value>Allow to save an element i.e., a field, a decision, a form, a principal or document (a reference).</value>
    <comment>activity description</comment>
  </data>
  <data name="SaveElement_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElement_TaskIdentifier_Description" xml:space="preserve">
    <value>Identifier of the task</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElement_Code_DisplayName" xml:space="preserve">
    <value>Code</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElement_Code_Description" xml:space="preserve">
    <value>Element definition code</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElement_Value_DisplayName" xml:space="preserve">
    <value>Value</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElement_Value_Description" xml:space="preserve">
    <value>Value to set</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElement_Valid_DisplayName" xml:space="preserve">
    <value>Valid</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElement_Valid_Description" xml:space="preserve">
    <value>Mark element as valid/invalid. Default is valid.</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElement_Task_Description" xml:space="preserve">
    <value>Value to set</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElement_Task_DisplayName" xml:space="preserve">
    <value>Value</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_DisplayName" xml:space="preserve">
    <value>Save element document</value>
    <comment>activity name</comment>
  </data>
  <data name="SaveElementDocument_Description" xml:space="preserve">
    <value>Save a element of type document</value>
    <comment>activity description</comment>
  </data>
  <data name="SaveElementDocument_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_TaskIdentifier_Description" xml:space="preserve">
    <value>Identifier of the task</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElementDocument_Code_DisplayName" xml:space="preserve">
    <value>Code</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_Code_Description" xml:space="preserve">
    <value>Element definition code</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElementDocument_FilePath_DisplayName" xml:space="preserve">
    <value>File Path</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_FilePath_Description" xml:space="preserve">
    <value>A file path to upload in a file system</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElementDocument_Task_DisplayName" xml:space="preserve">
    <value>Task</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_Task_Description" xml:space="preserve">
    <value>Task resource</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElementDocument_Id_DisplayName" xml:space="preserve">
    <value>Id</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_Valid_DisplayName" xml:space="preserve">
    <value>Valid</value>
    <comment>property name</comment>
  </data>
  <data name="SaveElementDocument_Id_Description" xml:space="preserve">
    <value>UUID to identify a document. Leave blanck to generate one.</value>
    <comment>property description</comment>
  </data>
  <data name="SaveElementDocument_Valid_Description" xml:space="preserve">
    <value>Mark document as valid/invalid. Default is valid.</value>
    <comment>property description</comment>
  </data>
  <data name="DeleteElement_DisplayName" xml:space="preserve">
    <value>Delete element</value>
    <comment>activity name</comment>
  </data>
  <data name="DeleteElement_Description" xml:space="preserve">
    <value>Delete an element by code</value>
    <comment>activity description</comment>
  </data>
  <data name="DeleteElement_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Task Identifier</value>
    <comment>property name</comment>
  </data>
  <data name="DeleteElement_TaskIdentifier_Description" xml:space="preserve">
    <value>Identifier of the task that contains the element to delete.</value>
    <comment>property description</comment>
  </data>
  <data name="DeleteElement_Code_DisplayName" xml:space="preserve">
    <value>Code</value>
    <comment>property name</comment>
  </data>
  <data name="DeleteElement_Code_Description" xml:space="preserve">
    <value>Element definition code</value>
    <comment>property description</comment>
  </data>
  <data name="DeleteElement_Task_DisplayName" xml:space="preserve">
    <value>Task</value>
    <comment>property name</comment>
  </data>
  <data name="DeleteElement_Task_Description" xml:space="preserve">
    <value>Task resource</value>
    <comment>property description</comment>
  </data>
  <data name="DeleteElementDocument_DisplayName" xml:space="preserve">
    <value>Delete element document</value>
    <comment>activity name</comment>
  </data>
  <data name="DeleteElementDocument_Description" xml:space="preserve">
    <value>Delete an element document value</value>
    <comment>activity description</comment>
  </data>
  <data name="DeleteElementDocument_TaskIdentifier_DisplayName" xml:space="preserve">
    <value>Identifier of the task that contains the document to delete.</value>
    <comment>property name</comment>
  </data>
  <data name="DeleteElementDocument_TaskIdentifier_Description" xml:space="preserve">
    <value>Task identifier</value>
    <comment>property description</comment>
  </data>
  <data name="DeleteElementDocument_Id_DisplayName" xml:space="preserve">
    <value>Id</value>
    <comment>property name</comment>
  </data>
  <data name="DeleteElementDocument_Id_Description" xml:space="preserve">
    <value>Identifier of the document to delete</value>
    <comment>property description</comment>
  </data>
  <data name="DeleteElementDocument_Task_DisplayName" xml:space="preserve">
    <value>Task</value>
    <comment>property name</comment>
  </data>
  <data name="DeleteElementDocument_Task_Description" xml:space="preserve">
    <value>Task resource</value>
    <comment>property description</comment>
  </data>
</root>